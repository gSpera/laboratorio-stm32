
out.elf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <initial_sp>:
   0:	2000a000 	.word	0x2000a000

00000004 <reset_handler>:
   4:	00000141 	.word	0x00000141
	...

00000118 <tim6_dacunder>:
 118:	0000011d 	.word	0x0000011d

0000011c <isr_tim6dacunder>:
#define SYS_CLK 8000000  // 8MHz

int leds = 0;
void isr_tim6dacunder() {
    unsigned int *ptr = (unsigned int *)(GPIOE_BASE + GPIO_ODR);
    leds ^= 0xFF << 8;
 11c:	23ff      	movs	r3, #255	; 0xff
 11e:	4a05      	ldr	r2, [pc, #20]	; (134 <isr_tim6dacunder+0x18>)
 120:	6811      	ldr	r1, [r2, #0]
 122:	021b      	lsls	r3, r3, #8
 124:	404b      	eors	r3, r1
 126:	6013      	str	r3, [r2, #0]
    *ptr = leds;
 128:	4a03      	ldr	r2, [pc, #12]	; (138 <isr_tim6dacunder+0x1c>)
 12a:	6013      	str	r3, [r2, #0]
    ptr = (unsigned int *)(TIM6_BASE + TIM_SR);
    *ptr = 0;
 12c:	2200      	movs	r2, #0
 12e:	4b03      	ldr	r3, [pc, #12]	; (13c <isr_tim6dacunder+0x20>)
 130:	601a      	str	r2, [r3, #0]
}
 132:	4770      	bx	lr
 134:	000001b8 	.word	0x000001b8
 138:	48001014 	.word	0x48001014
 13c:	40001010 	.word	0x40001010

00000140 <main>:

int main() {
    // Clock
    volatile unsigned int *ptr = (unsigned int *)(RCC_BASE + RCC_AHBENR);
    *ptr |= 1 << 21;
 140:	2380      	movs	r3, #128	; 0x80
 142:	4a12      	ldr	r2, [pc, #72]	; (18c <main+0x4c>)
 144:	6811      	ldr	r1, [r2, #0]
 146:	039b      	lsls	r3, r3, #14
 148:	430b      	orrs	r3, r1
    ptr = (unsigned int *)(RCC_BASE + RCC_APB1ENR);
    *ptr |= 1 << 4;
 14a:	2110      	movs	r1, #16
    *ptr |= 1 << 21;
 14c:	6013      	str	r3, [r2, #0]
    *ptr |= 1 << 4;
 14e:	4a10      	ldr	r2, [pc, #64]	; (190 <main+0x50>)
 150:	6813      	ldr	r3, [r2, #0]
 152:	430b      	orrs	r3, r1
 154:	6013      	str	r3, [r2, #0]

    // NVIC
    ptr = (unsigned int *)NVIC_BASE + NVIC_ISER;
    ptr[1] = 1 << 22;  // 54
 156:	2280      	movs	r2, #128	; 0x80
 158:	4b0e      	ldr	r3, [pc, #56]	; (194 <main+0x54>)
 15a:	03d2      	lsls	r2, r2, #15
 15c:	601a      	str	r2, [r3, #0]

    // TIM6
    ptr = (unsigned int *)(TIM6_BASE + TIM_PSC);
    *ptr = 8000 - 1;  // 8MHz / 8k = 1kHz
 15e:	4b0e      	ldr	r3, [pc, #56]	; (198 <main+0x58>)
 160:	4a0e      	ldr	r2, [pc, #56]	; (19c <main+0x5c>)
 162:	601a      	str	r2, [r3, #0]
    ptr = (unsigned int *)(TIM6_BASE + TIM_ARR);
    *ptr = 2000;
 164:	22fa      	movs	r2, #250	; 0xfa
 166:	4b0e      	ldr	r3, [pc, #56]	; (1a0 <main+0x60>)
 168:	00d2      	lsls	r2, r2, #3
 16a:	601a      	str	r2, [r3, #0]
    ptr = (unsigned int *)(TIM6_BASE + TIM_CNT);
    *ptr = 0;
 16c:	2200      	movs	r2, #0
 16e:	4b0d      	ldr	r3, [pc, #52]	; (1a4 <main+0x64>)
 170:	601a      	str	r2, [r3, #0]
    ptr = (unsigned int *)(TIM6_BASE + TIM_DIER);
    *ptr = 1;
 172:	4b0d      	ldr	r3, [pc, #52]	; (1a8 <main+0x68>)
 174:	390f      	subs	r1, #15
 176:	6019      	str	r1, [r3, #0]
    ptr = (unsigned int *)(TIM6_BASE + TIM_CR1);
    *ptr |= (1 << 0);
 178:	4a0c      	ldr	r2, [pc, #48]	; (1ac <main+0x6c>)
 17a:	6813      	ldr	r3, [r2, #0]
 17c:	430b      	orrs	r3, r1
 17e:	6013      	str	r3, [r2, #0]

    // Moder
    ptr = (unsigned int *)(GPIOE_BASE + GPIO_MODER);
    *ptr |= 0x5555 << 16;
 180:	4a0b      	ldr	r2, [pc, #44]	; (1b0 <main+0x70>)
 182:	4b0c      	ldr	r3, [pc, #48]	; (1b4 <main+0x74>)
 184:	6811      	ldr	r1, [r2, #0]
 186:	430b      	orrs	r3, r1
 188:	6013      	str	r3, [r2, #0]

    volatile unsigned int *status =
        (volatile unsigned int *)(TIM6_BASE + TIM_SR);
    ptr = (volatile unsigned int *)(GPIOE_BASE + GPIO_ODR);

    while (1)
 18a:	e7fe      	b.n	18a <main+0x4a>
 18c:	40021014 	.word	0x40021014
 190:	4002101c 	.word	0x4002101c
 194:	e000e3f8 	.word	0xe000e3f8
 198:	40001028 	.word	0x40001028
 19c:	00001f3f 	.word	0x00001f3f
 1a0:	4000102c 	.word	0x4000102c
 1a4:	40001024 	.word	0x40001024
 1a8:	4000100c 	.word	0x4000100c
 1ac:	40001000 	.word	0x40001000
 1b0:	48001000 	.word	0x48001000
 1b4:	55550000 	.word	0x55550000
